/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pos;

import java.util.Date;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Random;


/**
 *
 * @author Tento
 */
public class Posframe extends javax.swing.JFrame {

    
    private static float totalHarga=0;
    private static String daftarBelanja = "";
    private static boolean isBuyToken = false;
    private int indexofTransaksi = 0;
    
    
    
    public String getDaftarBelanja() {
        return daftarBelanja;
    }

    public void setDaftarBelanja(String daftarBelanja) {
        this.daftarBelanja = daftarBelanja;
    }
    
    public static boolean getIsBuyToken() {
        return isBuyToken;
    }

    public void setIsBuyToken(boolean isBuyToken) {
        this.isBuyToken = isBuyToken;
    }
    
    public int getIndexOfTransaksi() {
        return indexofTransaksi;
    }

    public void setIndexOfTransaksi(int indexofTransaksi) {
        this.indexofTransaksi = indexofTransaksi;
    }

    public float getTotalHarga() {
        return totalHarga;
    }

    public void setTotalHarga(float totalHarga) {
        this.totalHarga = totalHarga;
    }
    

    Pulsa pulsa = new Pulsa();
    Token token = new Token();
    
    public Posframe() {
        
        DBconnector.initDBConnection();
        Barang.loadItemFromDB();
        Makanan.loadItemFromDB();
        Pulsa.loadItemFromDB();
        Token.loadItemFromDB();
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TabelBarang = new javax.swing.JTable();
        KodeTextField = new javax.swing.JTextField();
        NamaTextField = new javax.swing.JTextField();
        HargaTextField = new javax.swing.JTextField();
        AmountTextField = new javax.swing.JTextField();
        Jumlah = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        Amount = new javax.swing.JLabel();
        TotalTextField = new javax.swing.JTextField();
        BayarButton = new javax.swing.JButton();
        PembayaranCombobox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        TombolTambah = new javax.swing.JButton();
        KadaluarsaField = new javax.swing.JTextField();
        OperatorField = new javax.swing.JTextField();
        noTelpField = new javax.swing.JTextField();
        NominalField = new javax.swing.JTextField();
        NoMeteranField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setAutoRequestFocus(false);
        setPreferredSize(new java.awt.Dimension(1080, 652));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TabelBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode", "Nama", "Jumlah", "Harga", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TabelBarang.setEnabled(false);
        jScrollPane1.setViewportView(TabelBarang);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 570, 210));

        KodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KodeTextFieldActionPerformed(evt);
            }
        });
        KodeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                KodeTextFieldKeyPressed(evt);
            }
        });
        getContentPane().add(KodeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 174, -1));

        NamaTextField.setEditable(false);
        getContentPane().add(NamaTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 170, 250, -1));

        HargaTextField.setEditable(false);
        HargaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HargaTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(HargaTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 174, -1));

        AmountTextField.setEditable(false);
        getContentPane().add(AmountTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 210, 250, -1));

        Jumlah.setValue(1);
        Jumlah.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                JumlahStateChanged(evt);
            }
        });
        getContentPane().add(Jumlah, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, -1, 30));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setToolTipText("");

        Amount.setText("Harga Total");

        TotalTextField.setEditable(false);
        TotalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalTextFieldActionPerformed(evt);
            }
        });

        BayarButton.setText("Bayar");
        BayarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BayarButtonActionPerformed(evt);
            }
        });

        PembayaranCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kas", "Kartu Debit", "QRIS" }));
        PembayaranCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PembayaranComboboxActionPerformed(evt);
            }
        });

        jLabel5.setText("Pembayaran :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Amount)
                        .addGap(38, 38, 38)
                        .addComponent(TotalTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                    .addComponent(PembayaranCombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BayarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Amount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PembayaranCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BayarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 390, -1, 210));

        TombolTambah.setText("Tambah");
        TombolTambah.setEnabled(false);
        TombolTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TombolTambahActionPerformed(evt);
            }
        });
        getContentPane().add(TombolTambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 220, 126, 65));

        KadaluarsaField.setEditable(false);
        KadaluarsaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KadaluarsaFieldActionPerformed(evt);
            }
        });
        getContentPane().add(KadaluarsaField, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 260, 250, -1));

        OperatorField.setEditable(false);
        OperatorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OperatorFieldActionPerformed(evt);
            }
        });
        getContentPane().add(OperatorField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, 174, -1));

        noTelpField.setEditable(false);
        getContentPane().add(noTelpField, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 300, 250, -1));

        NominalField.setEditable(false);
        getContentPane().add(NominalField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, 174, -1));

        NoMeteranField.setEditable(false);
        NoMeteranField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoMeteranFieldActionPerformed(evt);
            }
        });
        getContentPane().add(NoMeteranField, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 340, 250, 20));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pos/BG (1).png"))); // NOI18N
        jLabel12.setMaximumSize(new java.awt.Dimension(1280, 720));
        jLabel12.setMinimumSize(new java.awt.Dimension(1280, 720));
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1080, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void KodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KodeTextFieldActionPerformed
        // TODO add your handling code here:
        
        Barang tempBarang = Barang.daftarBarang.get(Barang.daftarBarang.size()-1);
        int kodeTerbesarBarang = Integer.parseInt(tempBarang.getKode());

        Makanan tempMakanan = Makanan.daftarMakanan.get(Makanan.daftarMakanan.size()-1);
        int kodeTerbesarMakanan = Integer.parseInt(tempMakanan.getKode());

        Pulsa tempPulsa = Pulsa.daftarPulsa.get(Pulsa.daftarPulsa.size()-1);
        int kodeTerbesarPulsa = Integer.parseInt(tempPulsa.getKode());

        Token tempToken = Token.daftarToken.get(Token.daftarToken.size()-1);
        int kodeTerbesarToken = Integer.parseInt(tempToken.getKode());
        
        
        try{
            int kodeInput=Integer.valueOf(KodeTextField.getText());
            if(kodeInput<=kodeTerbesarBarang){
                for(int i=0;i<=Barang.daftarBarang.size()-1;i++){
                    tempBarang=Barang.daftarBarang.get(i); 
                    if(Integer.valueOf(tempBarang.getKode()) == kodeInput){
                        
                        System.out.println("Barang ditemukan");
                        TombolTambah.setEnabled(true);
                        
                        NamaTextField.setText(tempBarang.getNama());
                        HargaTextField.setText(Integer.toString((int) tempBarang.getHarga()));
                        KadaluarsaField.setText("");
                        OperatorField.setText("");
                        NominalField.setText("");
                        noTelpField.setEditable(false);
                        NoMeteranField.setEditable(false);
                        noTelpField.setText("");
                        NoMeteranField.setText("");
                         
                    }       
                }
            }else if(kodeInput<=kodeTerbesarMakanan){
                for(int i=0;i<=Makanan.daftarMakanan.size()-1;i++){
                    tempMakanan=Makanan.daftarMakanan.get(i); 
                    if(Integer.valueOf(tempMakanan.getKode()) == kodeInput){
                        
                        System.out.println("Makanan ditemukan");
                        TombolTambah.setEnabled(true);
                        
                        
                         NamaTextField.setText(tempMakanan.getNama());
                         HargaTextField.setText(Integer.toString((int) tempMakanan.getHarga()));
                                         
                         SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
                         
                         String kadaluarsa = formatter.format(tempMakanan.getKadaluarsa());
                         KadaluarsaField.setText(kadaluarsa);
                         OperatorField.setText("");
                         NominalField.setText("");
                         noTelpField.setEditable(false);
                         NoMeteranField.setEditable(false);
                         noTelpField.setText("");
                         NoMeteranField.setText("");
                    }       
                }
                
            }else if(kodeInput<=kodeTerbesarPulsa){
                for(int i=0;i<=Pulsa.daftarPulsa.size()-1;i++){
                    tempPulsa=Pulsa.daftarPulsa.get(i); 
                    if(Integer.valueOf(tempPulsa.getKode()) == kodeInput){
                        
                        System.out.println("Pulsa ditemukan");
                        TombolTambah.setEnabled(true);
                        
                         NamaTextField.setText(tempPulsa.getNama());
                         HargaTextField.setText(Integer.toString((int) tempPulsa.getHarga()));
                         KadaluarsaField.setText("");
                         OperatorField.setText(tempPulsa.getOperator());
                         NominalField.setText(Float.toString(tempPulsa.getNominal()));
                         noTelpField.setEditable(true);
                         NoMeteranField.setEditable(false);
                         NoMeteranField.setText("");
                    }       
                }
                
            }else if(kodeInput<=kodeTerbesarToken){
                for(int i=0;i<=Token.daftarToken.size()-1;i++){
                    tempToken=Token.daftarToken.get(i); 
                    if(Integer.valueOf(tempToken.getKode()) == kodeInput){
                        
                        System.out.println("Token ditemukan");
                        TombolTambah.setEnabled(true);
                        
                         NamaTextField.setText(tempToken.getNama());
                         HargaTextField.setText(Integer.toString((int) tempToken.getHarga()));
                         KadaluarsaField.setText("");
                         OperatorField.setText("");
                         NominalField.setText(Float.toString(tempToken.getNominal()));
                         noTelpField.setEditable(false);
                         NoMeteranField.setEditable(true);
                         noTelpField.setText("");
                    }       
                }
                
            }
            int jumlah=Integer.parseInt(Jumlah.getValue().toString());
            var harga=Integer.parseInt(HargaTextField.getText());
            int total=jumlah*harga;

            AmountTextField.setText(String.valueOf(total));
        }catch(NumberFormatException e){
            if(KodeTextField.getText().equals("")){
                JOptionPane.showMessageDialog(rootPane, "Kode tidak boleh kosong");
            }else{
                JOptionPane.showMessageDialog(rootPane, "Kode tidak ditemukan");
            }
             
        }
        
    }//GEN-LAST:event_KodeTextFieldActionPerformed

    private void HargaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HargaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HargaTextFieldActionPerformed

    private void KodeTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KodeTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_KodeTextFieldKeyPressed
    

    private void JumlahStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_JumlahStateChanged
        // TODO add your handling code here:
        int jumlah=Integer.parseInt(Jumlah.getValue().toString());
        var harga=Integer.parseInt(HargaTextField.getText());
        int total=jumlah*harga;
        
        AmountTextField.setText(String.valueOf(total));        
        //TotalTextField.setText(String.valueOf(total));
    }//GEN-LAST:event_JumlahStateChanged

    private void TombolTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TombolTambahActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = new DefaultTableModel();
        model=(DefaultTableModel)TabelBarang.getModel();
        
        if((!OperatorField.getText().isEmpty()) && noTelpField.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Nomor HP tidak boleh kosong!");
        }else if(NoMeteranField.isEditable() && NoMeteranField.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Nomor Meteran tidak boleh kosong!");
        }else{
        
        if(NoMeteranField.isEditable()){
            isBuyToken = true;
        }
        
        pulsa.setNoTelp(noTelpField.getText());
        token.setNoMeteran(NoMeteranField.getText());
    
        daftarBelanja = daftarBelanja+NamaTextField.getText()+" "+pulsa.getNoTelp()+token.getNoMeteran()+" X"+(Jumlah.getValue().toString())+", ";
        
        totalHarga = totalHarga + (Float.parseFloat(HargaTextField.getText()) * Float.parseFloat(Jumlah.getValue().toString()));
        
        model.addRow(new Object[]{
           KodeTextField.getText(),
           NamaTextField.getText()+" "+noTelpField.getText()+NoMeteranField.getText(),
           Jumlah.getValue().toString(),
           HargaTextField.getText(),
           AmountTextField.getText(),
    });
        }
        
        
        
        
        
        TotalTextField.setText(Float.toString(totalHarga));
        KodeTextField.setText("");
        NamaTextField.setText("");
        HargaTextField.setText("");
        AmountTextField.setText("");
        KadaluarsaField.setText("");
        OperatorField.setText("");
        noTelpField.setText("");
        NominalField.setText("");
        NoMeteranField.setText("");
        noTelpField.setEditable(false);
        NoMeteranField.setEditable(false);
        KodeTextField.requestFocus();
        
        TombolTambah.setEnabled(false);
    }//GEN-LAST:event_TombolTambahActionPerformed

    private void TotalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalTextFieldActionPerformed
        // TODO add your handling code here
    }//GEN-LAST:event_TotalTextFieldActionPerformed

    private void BayarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BayarButtonActionPerformed
        String Pilihan = (String) PembayaranCombobox.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) TabelBarang.getModel();
        model.setRowCount(0);
        
        Random random = new Random();
        int min = 10000; // Minimum 9-digit number (inclusive)
        int max = 99999;
        int digit1 = random.nextInt(max - min + 1) + min;
        int digit2 = random.nextInt(max - min + 1) + min;
        Kas.invoiceID = String.valueOf(digit1)+String.valueOf(digit2);
        KartuDebit.invoiceID = String.valueOf(digit1)+String.valueOf(digit2);
        QRIS.invoiceID = String.valueOf(digit1)+String.valueOf(digit2);
        
        if (totalHarga==0){
            JOptionPane.showMessageDialog(rootPane, "Anda belum belanja!");
        }else{
        
            TotalTextField.setText("");
            setVisible(false);


            if (Pilihan.equals("Kas")){
                Kas kas = new Kas();

                kas.TotalBelanjaTextField.setText(Float.toString(getTotalHarga()));


                kas.setVisible(true);
            }else if (Pilihan.equals("Kartu Debit")){
                KartuDebit debit = new KartuDebit();

                debit.TotalBelanjaTextField.setText(Float.toString(getTotalHarga()));

                debit.setVisible(true);
            }else if (Pilihan.equals("QRIS")){
                QRIS qris = new QRIS();
                Date currentTime = new Date();
                qris.totalBelanja = getTotalHarga();
                String konten = "Harga : "+String.valueOf(getTotalHarga())+"\nInvoice ID : "+QRIS.invoiceID+"\nCreated At : "+currentTime+" \n \n Thank you for your purchases !";
                qris.generateQR(konten,(QRIS.invoiceID+".png"));
                qris.setVisible(true);
            }
        }
    }//GEN-LAST:event_BayarButtonActionPerformed

    private void KadaluarsaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KadaluarsaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KadaluarsaFieldActionPerformed

    private void OperatorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OperatorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OperatorFieldActionPerformed

    private void NoMeteranFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoMeteranFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NoMeteranFieldActionPerformed

    private void PembayaranComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PembayaranComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PembayaranComboboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Posframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Posframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Posframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Posframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Posframe().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Amount;
    private javax.swing.JTextField AmountTextField;
    private javax.swing.JButton BayarButton;
    private javax.swing.JTextField HargaTextField;
    public javax.swing.JSpinner Jumlah;
    public static javax.swing.JTextField KadaluarsaField;
    private javax.swing.JTextField KodeTextField;
    private javax.swing.JTextField NamaTextField;
    public static javax.swing.JTextField NoMeteranField;
    public static javax.swing.JTextField NominalField;
    public static javax.swing.JTextField OperatorField;
    private javax.swing.JComboBox<String> PembayaranCombobox;
    public static javax.swing.JTable TabelBarang;
    public static javax.swing.JButton TombolTambah;
    private javax.swing.JTextField TotalTextField;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField noTelpField;
    // End of variables declaration//GEN-END:variables
}
